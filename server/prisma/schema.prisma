generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  username        String   @unique
  email           String   @unique
  password        String
  likedPostIds    String[] @db.ObjectId
  likedPosts      Post[]   @relation("likes", references: [id], fields: [likedPostIds])
  favoritePostIds String[] @db.ObjectId
  favoritePosts   Post[]   @relation("favorites", references: [id], fields: [likedPostIds])

  posts      Post[]     @relation("posts")
  followers  Follower[] @relation("follower")
  followings Follower[] @relation("following")
  Lists      Lists[]
}

model Post {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  userId           String   @db.ObjectId
  postedBy         User     @relation(fields: [userId], references: [id], onDelete: Cascade, name: "posts")
  likedUserIds     String[] @db.ObjectId
  likes            User[]   @relation("likes", references: [id], fields: [likedUserIds])
  favoritesUserIds String[] @db.ObjectId
  favorites        User[]   @relation("favorites", references: [id], fields: [favoritesUserIds])
}

model Follower {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  followerId  String @db.ObjectId
  follower    User   @relation(name: "following", fields: [followerId], references: [id])
  followingId String @db.ObjectId
  following   User   @relation(name: "follower", fields: [followerId], references: [id])

  @@unique([followerId, followingId])
}

model Lists {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}
